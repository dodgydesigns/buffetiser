services:
  # db:
  #   image: postgres:13
  #   container_name: buffetiser_db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: buffetiser
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: BUFFETISER_DB
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./postgres_backup:/var/lib/postgresql/backup
  #   networks:
  #     - buffetiser_network

  backend:
    build:
      context: ./backend
    container_name: buffetiser_backend
    # command: ["sh", "-c", "./wait-for-it.sh db:5432 -- python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    command: >
      sh -c "
        ./wait-for-it.sh db:5432 -- python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py loaddata fixtures/buffetiser_25-01-19_data.json &&
        python manage.py runserver 0.0.0.0:8000 &&
        python manage.py createsuperuser --username buffetiser --email dodgydesigns@gmail.com --noinput"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    # depends_on:
    #   - db
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://buffetiser:password@db:5432/BUFFETISER_DB
    networks:
      - buffetiser_network

  # frontend:
  #   build:
  #     context: ./frontend
  #   container_name: buffetiser_frontend
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   networks:
  #     - buffetiser_network
  #   ports:
  #     - "8080:8080"
  #   command: ["sh", "-c", "npm install && npm run build"]  # Build the frontend
  #   # command: ["sh", "-c", "npm install && npm run build && serve -s build -l 8080"]  # Build the frontend

  # webserver:
  #   image: nginx:alpine
  #   container_name: buffetiser_webserver
  #   depends_on:
  #     - frontend
  #   volumes:
  #     - ./frontend/build:/usr/share/nginx/html:ro  # Serve the built frontend
  #     # - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Custom Nginx config
  #   ports:
  #     - "80:80"
  #   networks:
  #     - buffetiser_network

volumes:
  postgres_data:

networks:
  buffetiser_network:
    driver: bridge
